{
  "info": {
    "name": "Sherbimi-IM API Tests",
    "description": "Koleksion për testimin e API-së me middleware të përmirësuar",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "noauth"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "businessId",
      "value": "",
      "type": "string"
    },
    {
      "key": "serviceId",
      "value": "",
      "type": "string"
    },
    {
      "key": "employeeId",
      "value": "",
      "type": "string"
    },
    {
      "key": "clientToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "clientId",
      "value": "",
      "type": "string"
    },
    {
      "key": "bookingId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login Business User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"business@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('businessId', response.businessId);",
                  "    console.log('Business Token saved:', response.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Client User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"client@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('clientToken', response.token);",
                  "    pm.collectionVariables.set('clientId', response.userId);",
                  "    console.log('Client Token saved:', response.token);",
                  "    console.log('Client ID saved:', response.userId);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Services",
      "item": [
        {
          "name": "Get All Services (Public)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/services",
              "host": ["{{baseUrl}}"],
              "path": ["services"]
            }
          }
        },
        {
          "name": "Get Service by ID (Public)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/services/{{serviceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["services", "{{serviceId}}"]
            }
          }
        },
        {
          "name": "Create Service (Business)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Service\",\n  \"description\": \"Test service description\",\n  \"price\": 50.00,\n  \"durationMinutes\": 60,\n  \"categoryId\": \"category-id-here\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/services",
              "host": ["{{baseUrl}}"],
              "path": ["services"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('serviceId', response.id);",
                  "    console.log('Service created with ID:', response.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Service (Business)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test Service\",\n  \"description\": \"Updated description\",\n  \"price\": 75.00,\n  \"durationMinutes\": 90\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/services/{{serviceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["services", "{{serviceId}}"]
            }
          }
        },
        {
          "name": "Delete Service (Business)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/services/{{serviceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["services", "{{serviceId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Employees",
      "item": [
        {
          "name": "Get All Employees (Business)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/employees",
              "host": ["{{baseUrl}}"],
              "path": ["employees"]
            }
          }
        },
        {
          "name": "Get Employee by ID (Business)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/employees/{{employeeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["employees", "{{employeeId}}"]
            }
          }
        },
        {
          "name": "Create Employee (Business)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"phoneNumber\": \"+1234567890\",\n  \"position\": \"Hair Stylist\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/employees",
              "host": ["{{baseUrl}}"],
              "path": ["employees"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('employeeId', response.id);",
                  "    console.log('Employee created with ID:', response.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Employee (Business)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Smith\",\n  \"position\": \"Senior Hair Stylist\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/employees/{{employeeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["employees", "{{employeeId}}"]
            }
          }
        },
        {
          "name": "Assign Service to Employee (Business)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceId\": \"{{serviceId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/employees/{{employeeId}}/services",
              "host": ["{{baseUrl}}"],
              "path": ["employees", "{{employeeId}}", "services"]
            }
          }
        },
        {
          "name": "Remove Service from Employee (Business)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/employees/{{employeeId}}/services/{{serviceId}}",
              "host": ["{{baseUrl}}"],
              "path": [
                "employees",
                "{{employeeId}}",
                "services",
                "{{serviceId}}"
              ]
            }
          }
        },
        {
          "name": "Delete Employee (Business)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/employees/{{employeeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["employees", "{{employeeId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Bookings (CLIENT Only)",
      "item": [
        {
          "name": "Get All Bookings (CLIENT)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clientToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            }
          }
        },
        {
          "name": "Get Bookings by Date (CLIENT)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clientToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/bookings?date=2024-01-15&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"],
              "query": [
                {
                  "key": "date",
                  "value": "2024-01-15"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Booking by ID (CLIENT)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clientToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["bookings", "{{bookingId}}"]
            }
          }
        },
        {
          "name": "Create Booking (CLIENT)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{clientToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"clientId\": \"{{clientId}}\",\n  \"serviceId\": \"{{serviceId}}\",\n  \"employeeId\": \"{{employeeId}}\",\n  \"start\": \"2024-01-15T10:00:00.000Z\",\n  \"end\": \"2024-01-15T11:00:00.000Z\",\n  \"status\": \"PENDING\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('bookingId', response.id);",
                  "    console.log('Booking created with ID:', response.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Booking (CLIENT)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{clientToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"start\": \"2024-01-15T14:00:00.000Z\",\n  \"end\": \"2024-01-15T15:00:00.000Z\",\n  \"status\": \"CONFIRMED\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["bookings", "{{bookingId}}"]
            }
          }
        },
        {
          "name": "Check Availability (CLIENT)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{clientToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"employeeId\": \"{{employeeId}}\",\n  \"serviceId\": \"{{serviceId}}\",\n  \"date\": \"2024-01-15\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/bookings/availability",
              "host": ["{{baseUrl}}"],
              "path": ["bookings", "availability"]
            }
          }
        },
        {
          "name": "Delete Booking (CLIENT)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clientToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["bookings", "{{bookingId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Error Tests",
      "item": [
        {
          "name": "Test Unauthorized Access",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/employees",
              "host": ["{{baseUrl}}"],
              "path": ["employees"]
            }
          }
        },
        {
          "name": "Test Wrong Role Access",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer wrong-token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/employees",
              "host": ["{{baseUrl}}"],
              "path": ["employees"]
            }
          }
        },
        {
          "name": "Test Access to Other Business Resource",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/employees/wrong-employee-id",
              "host": ["{{baseUrl}}"],
              "path": ["employees", "wrong-employee-id"]
            }
          }
        },
        {
          "name": "Test Business User Access to Bookings (Should Fail)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            }
          }
        },
        {
          "name": "Test Unauthorized Access to Bookings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            }
          }
        },
        {
          "name": "Test Wrong Token for Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            }
          }
        }
      ]
    }
  ]
}
